/*
 * ArtAdherenceVulnerabilityEndEvent.cpp
 *
 *  Created on: Aug 5 , 2019
 *      Author: Babak
 */

#include "ArtAdherenceVulnerabilityEndEvent.h"
#include "Stats.h"

namespace TransModel {

ArtAdherenceVulnerabilityEndEvent::ArtAdherenceVulnerabilityEndEvent(std::shared_ptr<Person> person, double timestamp, double original_val_to_restore) :
        person_(person), timestamp_(timestamp), original_val_to_restore_(original_val_to_restore){
}

void ArtAdherenceVulnerabilityEndEvent::operator()() {

    //std::cout <<" ArtAdherenceVulnerabilityEndEvent: timestamp: " <<timestamp_<< ", person.id: "<< person_ -> id();
    //std::cout <<", current prob val:"<< person_ -> artAdherence().probability << ", original_val_to_restore: " << original_val_to_restore_<< std::endl;

    // might be dead or may have gone off prep by becoming infected
    // prior to this event occuring
    if (!person_->isDead() && person_->isOnART()) {
        person_ -> setARTAdherenceProbability(original_val_to_restore_);
    }
}

ArtAdherenceVulnerabilityEndEvent::~ArtAdherenceVulnerabilityEndEvent() {
}

} /* namespace TransModel */

