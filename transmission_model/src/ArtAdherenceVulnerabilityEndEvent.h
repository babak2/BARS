/*
 * ArtAdherenceVulnerabilityEndEvent.h
 *
 *  Created on: Aug 5 , 2019
 *      Author: Babak
 */

#ifndef SRC_ARTADHERENCEVULNERABILITYENDEVENT_H_
#define SRC_ARTADHERENCEVULNERABILITYENDEVENT_H_

#include <memory>

#include "repast_hpc/Schedule.h"
#include "Person.h"

namespace TransModel {

class ArtAdherenceVulnerabilityEndEvent : public repast::Functor {

private:
    PersonPtr person_;
    double timestamp_;
    double original_val_to_restore_;

public:
    ArtAdherenceVulnerabilityEndEvent(std::shared_ptr<Person> person, double timestamp, double original_val_to_restore);
    virtual ~ArtAdherenceVulnerabilityEndEvent();

    void operator()();
};

} /* namespace TransModel */

#endif /* SRC_ARTADHERENCEVULNERABILITYENDEVENT_H_ */
